AWSTemplateFormatVersion: 2010-09-09
Description: 
  CFN networking

Parameters:
  Az1:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: ap-northeast-1a
  Az2:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: ap-northeast-1c
  Az3:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: ap-northeast-1d
  SubnetCIDRBlocks: 
    Description: "three CIDR blocks"
    Type: CommaDelimitedList
    Default: >
      10.0.0.0/24,
      10.0.4.0/24,
      10.0.8.0/24,
      10.0.12.0/24,
      10.0.16.0/24,
       10.0.20.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags: 
        - Key: Name
          Value: CruddurVPC
      
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: CruddurIGW
  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW
  RT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC 
      Tags:
        - Key: Name
          Value: CruddurRT
  RouteToIGW:
    Type: AWS::EC2::Route
    DependsOn: AttachIGW
    Properties:
      RouteTableId: !Ref RT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
  PubSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [0, !Ref SubnetCIDRBlocks]
      AvailabilityZone: !Ref Az1
      EnableDns64: false
      MapPublicIpOnLaunch: true #Public Subnet
      Tags:
      - Key: Name
        Value: CruddurPubSubnet1
  PubSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [1, !Ref SubnetCIDRBlocks]
      AvailabilityZone: !Ref Az2
      EnableDns64: false
      MapPublicIpOnLaunch: true #Public Subnet
      Tags:
      - Key: Name
        Value: CruddurPubSubnet2
  PubSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [2, !Ref SubnetCIDRBlocks]
      AvailabilityZone: !Ref Az3
      EnableDns64: false
      MapPublicIpOnLaunch: true #Public Subnet
      Tags:
      - Key: Name
        Value: CruddurPubSubnet3
  PrivSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [3, !Ref SubnetCIDRBlocks]
      AvailabilityZone: !Ref Az1
      EnableDns64: false
      MapPublicIpOnLaunch: false #Private Subnet
      Tags:
      - Key: Name
        Value: CruddurPrivSubnet1
  PrivSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [4, !Ref SubnetCIDRBlocks]
      AvailabilityZone: !Ref Az2
      EnableDns64: false
      MapPublicIpOnLaunch: false #Private Subnet
      Tags:
      - Key: Name
        Value: CruddurPrivSubnet2
  PrivSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Select [5, !Ref SubnetCIDRBlocks]
      AvailabilityZone: !Ref Az3
      EnableDns64: false
      MapPublicIpOnLaunch: false #Private Subnet
      Tags:
      - Key: Name
        Value: CruddurPrivSubnet3
  PubSubnet1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSubnet1
      RouteTableId: !Ref RT
  PubSubnet2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSubnet2
      RouteTableId: !Ref RT
  PubSubnet3RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSubnet3
      RouteTableId: !Ref RT
  PrivSubnet1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivSubnet1
      RouteTableId: !Ref RT
  PrivSubnet2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivSubnet2
      RouteTableId: !Ref RT
  PrivSubnet3RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivSubnet3
      RouteTableId: !Ref RT
  